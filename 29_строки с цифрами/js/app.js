// Строки с цифрами в JavaScript
// Пусть у нас есть строка, содержащая только цифры:

// let test = '12345'; // строка с цифрами
// Давайте найдем, например, сумму первого и второго ее символов:

// let test = '12345';
// alert(test[0] + test[1]); // выведет '12' - суммирует как строки
// Как вы видите, символы нашей строки также являются строками и суммируются как строки. Пусть мы хотим суммировать их как числа. Используем для этого функцию Number:

// let test = '12345'; // строка
// alert(Number(test[0]) + Number(test[1])); // выведет 3

// let test = '12345'
// alert(Number(test[0]) + Number(test[1])); //выведет 3
// alert(Number(test[1]) + Number(test[2])); //выведет 5
// alert(Number(test[3]) + Number(test[4])); //выведет 9
// alert(Number(test[1]) + Number(test[4])); //выведет 7

// Обращение к цифрам числа
// Пусть теперь в переменной у нас хранится не число в кавычках, а просто число. В этом случае попытка обратится к его отдельному символу выдаст undefined, так как такое обращение работает только для строк:

// let test = 12345;
// alert(test[0]); // выдаст undefined
// Для решения проблемы преобразуем наше число в строку:

// let test = String(12345); // строка
// alert(test[0]); // выведет '1' - все работает
// Пусть мы теперь хотим найти сумму первых двух цифр:

// let test = String(12345); // строка
// alert(test[0] + test[1]); // выведет '12' - суммирует как строки
// Добавим функцию Number для того, чтобы символы суммировались как числа:

// let test = String(12345); // строка
// alert(Number(test[0]) + Number(test[1])); // выведет 3
// Напоминаю, что проблема такого рода возникнет только при суммировании. При умножении, например, преобразование к числам можно не выполнять:

// let test = String(12345); // строка
// alert(test[1] * test[2]); // выведет 6

// Задача 2
// Дано число 12345. Найдите сумму цифр этого числа.

// let test = String(12345);
// alert(Number(test[0]) + Number(test[1]) + Number(test[2]) + Number(test[3]) + Number(test[4])) //выведет 15

// let test = String(12345);
// alert(test[0] * test[1] * test[2] * test[3] * test[4]) //выведет 120

let test = '12345'
alert(test['4'] + test['3'] + test['2'] + test['1'] + test['0'])
// выводит числа наоборот 54321