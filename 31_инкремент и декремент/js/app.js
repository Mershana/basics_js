// операции инкремента и декремента в JavaScript
// рассмотрим следующий код:

// let num = 0;
// num = num + 1; // прибавляем к переменной num число 1
// alert(num);    // выведет 1
// как вы уже знаете, этот код можно переписать в сокращенном виде через оператор +=:

// let num = 0;
// num += 1;     // прибавляем к переменной num число 1
// alert(num);   // выведет 1
// на самом деле прибавление единицы в программировании встречается так часто, что для этой операции придуман еще более сокращенный синтаксис - специальный оператор инкремент ++, увеличивающий значение переменной на 1.

// перепишем наш код с его помощью:

// let num = 0;
// num++;        // прибавляем к переменной a число 1
// alert(num);   // выведет 1
// есть также операция декремент --, уменьшающая значение переменной на 1. Смотрите пример:

// let num = 0;
// num--;        // отнимаем от переменной num число 1
// alert(num);   // выведет -1

// задача 1
// переделайте этот код так, чтобы в нем операции инкремента и декремента:

// let num = 10;
// num = num + 1;
// num = num + 1;
// num = num - 1;
// alert(num);

// let num = 10;
// num++; //11
// num++; //12
// num--; //11 
// alert(num) //выведет 11

// префиксный и постфиксный тип
// на самом деле операции инкремента и декремента можно записывать двумя способами. давайте рассмотрим эти способы на примере ++, а для -- все будет аналогично.

// в первом способе операция записывается после имени переменной, вот так: a++, а во втором способе - перед именем переменной, вот так: ++a.

// первая форма называется постфиксной, а вторая - префиксной. Давайте посмотрим, в каких случаях проявляется разница между этими двумя формами.

// пусть у нас есть код alert(a++) и код alert(++a).

в случае alert(a++) переменная сначала выведется, а потом увеличится на единицу, а в случае alert(++a) переменная сначала увеличится на единицу, а потом выведется.

// в следующем примере первый alert выведет 0, так как вначале сработает вывод на экран, а уже затем переменная увеличится:

// let num = 0;
// alert(num++); // выведет 0
// alert(num);   // выведет 1
// а теперь переменная вначале увеличится, а уже затем будет вывод на экран:

// let num = 0;
// alert(++num); // выведет 1 - переменная увеличилась сразу
// такое поведение справедливо не только для вывода на экран, но и для присваивания:

// let num1 = 0;
// let num2 = num1++; // в переменную num2 запишется 0
// alert(num2); // выведет 0
// alert(num1); // выведет 1 - переменная num1 поменялась после записи в num2
// а теперь поменяем постфиксную форму на префиксную:

// let num1 = 0;
// let num2 = ++num1; // в переменную num2 запишется 1
// alert(num2); // выведет 1
// если наша операция выполняется на отдельной строке, то разницы между префиксной и постфиксной формами нет:

// let num = 0;
// ++num;
// num++;
// alert(num); // выведет 2

// Задача 2
// не запуская код, определите, что выведется на экран:
// let num = 3;
// alert(++num);// 4

// Задача 3
// let num = 3;
// alert(num++); //постфиксная 3

// Задача 4
// let num = 3;
// alert(--num); // --(1) префиксная выведет 2 

// Задача 5
// let num = 3;
// alert(num--); // постфиксная 3 

// Задача 6
// let num1 = 3;
// let num2 = ++num1;
// alert(num1); // 4 
// alert(num2); // 4

// Задача 7
// let num1 = 3;
// let num2 = num1++;
// alert(num1); // 4
// alert(num2); // 3

// Задача 8
// let num1 = 3;
// let num2 = --num1;
// alert(num1); //2
// alert(num2); //2

// Задача 9
// let num1 = 3;
// let num2 = num1--;
// alert(num1); //2  
// alert(num2); //3

// Задача 10
// let num1 = 3;
// num1++;
// let num2 = num1--;
// alert(num1++);
// alert(--num2);